on:
  push:
    branches:
    - master
    - release/*
    tags: v*

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.build.outputs.url }}
    steps:
    - uses: actions/checkout@v2

    - name: Set build number
      shell: pwsh
      run: |
        if ('${{ github.ref }}' -match 'refs/tags/v(.+)') {
          Set-Variable -Name build_version -Value "${matches[1]}.${{ github.run_number }}"
        } else {
          Set-Variable -Name version -Value (Get-Content -Path ./version)
          Set-Variable -Name build_version -Value "${version}.${{ github.run_number }}"
        }
        # must also set as env var for the real build
        echo ${build_version}
        echo "::set-output name=buildVersion::${build_version}"
      
    - name: Run "build"
      id: build
      run: echo "::set-output name=url::https://example.com"
      
    - run: cat ./README.md > README-copy.md
      
    - uses: actions/upload-artifact@v2
      with:
        name: readme-artifact
        path: ./README-copy.md

  create-release:
    if: contains(github.ref, 'refs/tags') 
    runs-on: ubuntu-latest
    needs: [build]
    steps:
    - uses: actions/checkout@v2

    - name: Create a Release
      uses: actions/create-release@v1
      id: create_release
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: ${{ needs.build.outputs.url }}
        draft: true

    - uses: actions/download-artifact@v2
      with:
        name: readme-artifact
        
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./README-copy.md
        asset_name: README.md
        asset_content_type: application/octet-stream
        
  bump-master-version:
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - uses: actions/checkout@v2.3.2
        with:
          ref: 'refs/heads/master'
      - name: Bump version file
        shell: pwsh
        run: |
          $v = [System.Version]::Parse($(Get-Content -Path ./VERSION))
          $v = New-Object System.Version($v.Major, ($v.Minor + 1), $v.Build)
          $v = $v.ToString()
          Set-Content -Path ./VERSION -Value $v
          git commit -m "Bump version to ${v}" -a
          
      - name: GitHub Push
        uses: ad-m/github-push-action@v0.6.0
        with:
          # Token for the repo. Can be passed in using $\{{ secrets.GITHUB_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}         
